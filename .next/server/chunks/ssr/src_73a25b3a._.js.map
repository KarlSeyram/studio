{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 93, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/placeholder-images.ts"],"sourcesContent":["import data from './placeholder-images.json';\n\nexport type ImagePlaceholder = {\n  id: string;\n  description: string;\n  imageUrl: string;\n  imageHint: string;\n};\n\nexport const PlaceHolderImages: ImagePlaceholder[] = data.placeholderImages;\n"],"names":[],"mappings":";;;AAAA;;AASO,MAAM,oBAAwC,2GAAA,CAAA,UAAI,CAAC,iBAAiB","debugId":null}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ebook-card.tsx"],"sourcesContent":["\"use client\";\n\nimport Image from \"next/image\";\nimport Link from \"next/link\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Card,\n  CardContent,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Ebook } from \"@/lib/data\";\nimport { PlaceHolderImages } from \"@/lib/placeholder-images\";\nimport { useCart } from \"@/context/cart-context\";\nimport { ShoppingCart } from \"lucide-react\";\n\ninterface EbookCardProps {\n  ebook: Ebook;\n}\n\nexport function EbookCard({ ebook }: EbookCardProps) {\n  const { addToCart } = useCart();\n  const image = PlaceHolderImages.find((img) => img.id === ebook.coverImageId);\n\n  return (\n    <Card className=\"flex flex-col overflow-hidden transition-all hover:shadow-lg hover:-translate-y-1\">\n      <Link href={`/ebook/${ebook.id}`} className=\"flex flex-col flex-grow\">\n        <CardHeader className=\"p-0\">\n          <div className=\"relative aspect-[2/3] w-full\">\n            {image && (\n              <Image\n                src={image.imageUrl}\n                alt={`Cover of ${ebook.title}`}\n                data-ai-hint={image.imageHint}\n                fill\n                className=\"object-cover\"\n                sizes=\"(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw\"\n              />\n            )}\n          </div>\n        </CardHeader>\n        <CardContent className=\"flex-grow p-4\">\n          <CardTitle className=\"mb-1 text-lg font-headline leading-tight group-hover:underline\">\n            {ebook.title}\n          </CardTitle>\n          <p className=\"text-sm text-muted-foreground\">{ebook.author}</p>\n        </CardContent>\n      </Link>\n      <CardFooter className=\"flex items-center justify-between p-4 pt-0\">\n        <p className=\"text-lg font-bold text-primary\">\n          GHâ‚µ{ebook.price.toFixed(2)}\n        </p>\n        <Button\n          onClick={(e) => {\n            e.stopPropagation();\n            addToCart(ebook);\n          }}\n          size=\"sm\"\n          className=\"shrink-0\"\n        >\n          <ShoppingCart className=\"h-4 w-4 md:mr-2\" />\n          <span className=\"hidden md:inline\">Add</span>\n        </Button>\n      </CardFooter>\n    </Card>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AAQA;AACA;AACA;AAfA;;;;;;;;;AAqBO,SAAS,UAAU,EAAE,KAAK,EAAkB;IACjD,MAAM,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,kIAAA,CAAA,UAAO,AAAD;IAC5B,MAAM,QAAQ,mIAAA,CAAA,oBAAiB,CAAC,IAAI,CAAC,CAAC,MAAQ,IAAI,EAAE,KAAK,MAAM,YAAY;IAE3E,qBACE,8OAAC,gIAAA,CAAA,OAAI;QAAC,WAAU;;0BACd,8OAAC,4JAAA,CAAA,UAAI;gBAAC,MAAM,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;gBAAE,WAAU;;kCAC1C,8OAAC,gIAAA,CAAA,aAAU;wBAAC,WAAU;kCACpB,cAAA,8OAAC;4BAAI,WAAU;sCACZ,uBACC,8OAAC,6HAAA,CAAA,UAAK;gCACJ,KAAK,MAAM,QAAQ;gCACnB,KAAK,CAAC,SAAS,EAAE,MAAM,KAAK,EAAE;gCAC9B,gBAAc,MAAM,SAAS;gCAC7B,IAAI;gCACJ,WAAU;gCACV,OAAM;;;;;;;;;;;;;;;;kCAKd,8OAAC,gIAAA,CAAA,cAAW;wBAAC,WAAU;;0CACrB,8OAAC,gIAAA,CAAA,YAAS;gCAAC,WAAU;0CAClB,MAAM,KAAK;;;;;;0CAEd,8OAAC;gCAAE,WAAU;0CAAiC,MAAM,MAAM;;;;;;;;;;;;;;;;;;0BAG9D,8OAAC,gIAAA,CAAA,aAAU;gBAAC,WAAU;;kCACpB,8OAAC;wBAAE,WAAU;;4BAAiC;4BACxC,MAAM,KAAK,CAAC,OAAO,CAAC;;;;;;;kCAE1B,8OAAC,kIAAA,CAAA,SAAM;wBACL,SAAS,CAAC;4BACR,EAAE,eAAe;4BACjB,UAAU;wBACZ;wBACA,MAAK;wBACL,WAAU;;0CAEV,8OAAC,sNAAA,CAAA,eAAY;gCAAC,WAAU;;;;;;0CACxB,8OAAC;gCAAK,WAAU;0CAAmB;;;;;;;;;;;;;;;;;;;;;;;;AAK7C","debugId":null}},
    {"offset": {"line": 254, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/suggest-ebooks-based-on-purchase-history.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview This file defines a Genkit flow for suggesting eBooks to a user based on their purchase history.\n *\n * - suggestEbooks - A function that suggests eBooks based on user's purchase history.\n * - SuggestEbooksInput - The input type for the suggestEbooks function, which includes the user's purchase history.\n * - SuggestEbooksOutput - The output type for the suggestEbooks function, which includes a list of suggested eBooks.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst SuggestEbooksInputSchema = z.object({\n  purchaseHistory: z\n    .string()\n    .describe(\"The user's purchase history as a string.\"),\n});\nexport type SuggestEbooksInput = z.infer<typeof SuggestEbooksInputSchema>;\n\nconst SuggestEbooksOutputSchema = z.object({\n  suggestedEbooks: z\n    .string()\n    .describe('A list of suggested eBooks based on the purchase history.'),\n});\nexport type SuggestEbooksOutput = z.infer<typeof SuggestEbooksOutputSchema>;\n\nexport async function suggestEbooks(input: SuggestEbooksInput): Promise<SuggestEbooksOutput> {\n  return suggestEbooksFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'suggestEbooksPrompt',\n  input: {schema: SuggestEbooksInputSchema},\n  output: {schema: SuggestEbooksOutputSchema},\n  prompt: `Based on the following purchase history: {{{purchaseHistory}}}, suggest some eBooks the user might enjoy. Return the list of books as a string.\n`,\n});\n\nconst suggestEbooksFlow = ai.defineFlow(\n  {\n    name: 'suggestEbooksFlow',\n    inputSchema: SuggestEbooksInputSchema,\n    outputSchema: SuggestEbooksOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;;IA2BsB,gBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 267, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ai-suggestions.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Loader2, Wand2 } from \"lucide-react\";\nimport { suggestEbooks } from \"@/ai/flows/suggest-ebooks-based-on-purchase-history\";\n\nexport default function AiSuggestions() {\n  const [suggestions, setSuggestions] = useState<string>(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [purchaseHistory, setPurchaseHistory] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (typeof window !== 'undefined') {\n      const history = localStorage.getItem('purchaseHistory');\n      setPurchaseHistory(history);\n    }\n  }, []);\n\n\n  const handleGetSuggestions = async () => {\n    setIsLoading(true);\n    setSuggestions(\"\");\n    try {\n      const history = purchaseHistory || \"User has not purchased any books yet.\";\n      const result = await suggestEbooks({ purchaseHistory: history });\n      setSuggestions(result.suggestedEbooks);\n    } catch (error) {\n      console.error(\"Failed to get suggestions:\", error);\n      setSuggestions(\"Sorry, I couldn't get any suggestions right now. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <section className=\"py-12 md:py-20 bg-card\">\n      <div className=\"container mx-auto px-4 text-center\">\n        <h2 className=\"font-headline text-3xl md:text-4xl font-bold mb-4\">\n          Need a Recommendation?\n        </h2>\n        <p className=\"max-w-2xl mx-auto text-muted-foreground mb-8\">\n          Let our AI analyze your taste and suggest your next great read. Based on your purchase history, we'll find books you'll love.\n        </p>\n        <Button onClick={handleGetSuggestions} disabled={isLoading} size=\"lg\">\n          {isLoading ? (\n            <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n          ) : (\n            <Wand2 className=\"mr-2 h-4 w-4\" />\n          )}\n          Get AI Suggestions\n        </Button>\n\n        {suggestions && (\n          <Card className=\"mt-8 max-w-2xl mx-auto text-left shadow-lg\">\n            <CardHeader>\n              <CardTitle className=\"font-headline flex items-center gap-2\">\n                <Wand2 className=\"text-primary\" />\n                Here are some books you might enjoy:\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <p className=\"text-foreground whitespace-pre-line\">{suggestions}</p>\n            </CardContent>\n          </Card>\n        )}\n      </div>\n    </section>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AAAA;AACA;AANA;;;;;;;AAQe,SAAS;IACtB,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IACvD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAEtE,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,uCAAmC;;QAGnC;IACF,GAAG,EAAE;IAGL,MAAM,uBAAuB;QAC3B,aAAa;QACb,eAAe;QACf,IAAI;YACF,MAAM,UAAU,mBAAmB;YACnC,MAAM,SAAS,MAAM,CAAA,GAAA,0JAAA,CAAA,gBAAa,AAAD,EAAE;gBAAE,iBAAiB;YAAQ;YAC9D,eAAe,OAAO,eAAe;QACvC,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,8BAA8B;YAC5C,eAAe;QACjB,SAAU;YACR,aAAa;QACf;IACF;IAEA,qBACE,8OAAC;QAAQ,WAAU;kBACjB,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BAAoD;;;;;;8BAGlE,8OAAC;oBAAE,WAAU;8BAA+C;;;;;;8BAG5D,8OAAC,kIAAA,CAAA,SAAM;oBAAC,SAAS;oBAAsB,UAAU;oBAAW,MAAK;;wBAC9D,0BACC,8OAAC,iNAAA,CAAA,UAAO;4BAAC,WAAU;;;;;iDAEnB,8OAAC,+MAAA,CAAA,QAAK;4BAAC,WAAU;;;;;;wBACjB;;;;;;;gBAIH,6BACC,8OAAC,gIAAA,CAAA,OAAI;oBAAC,WAAU;;sCACd,8OAAC,gIAAA,CAAA,aAAU;sCACT,cAAA,8OAAC,gIAAA,CAAA,YAAS;gCAAC,WAAU;;kDACnB,8OAAC,+MAAA,CAAA,QAAK;wCAAC,WAAU;;;;;;oCAAiB;;;;;;;;;;;;sCAItC,8OAAC,gIAAA,CAAA,cAAW;sCACV,cAAA,8OAAC;gCAAE,WAAU;0CAAuC;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOlE","debugId":null}}]
}